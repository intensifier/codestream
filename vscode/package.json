{
	"name": "codestream",
	"displayName": "New Relic CodeStream",
	"description": "Bring production telemetry into your IDE to quickly identify and resolve performance issues.",
	"version": "15.13.2",
	"author": "CodeStream",
	"publisher": "CodeStream",
	"extensionKind": [
		"workspace"
	],
	"license": "UNLICENSED",
	"homepage": "https://codestream.com",
	"bugs": {
		"url": "https://support.newrelic.com"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/TeamCodeStream/CodeStream"
	},
	"engines": {
		"vscode": "^1.73.0"
	},
	"main": "./dist/extension",
	"icon": "assets/images/codestream.png",
	"preview": false,
	"categories": [
		"Other"
	],
	"galleryBanner": {
		"color": "#eff1f3",
		"theme": "light"
	},
	"keywords": [
		"insights",
		"observability"
	],
	"contributes": {
		"snippets": [
			{
				"language": "nrql",
				"path": "./nrql.snippets.json"
			}
		],
		"languages": [
			{
				"id": "nrql",
				"extensions": [
					".nrql"
				],
				"configuration": "./nrql.configuration.json"
			}
		],
		"grammars": [
			{
				"language": "nrql",
				"scopeName": "source.nrql",
				"path": "./nrql.tmGrammar.json"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "codestream-activitybar",
					"title": "New Relic CodeStream",
					"icon": "assets/images/codestream.svg"
				}
			]
		},
		"views": {
			"codestream-activitybar": [
				{
					"id": "activitybar.codestream",
					"type": "webview",
					"name": "",
					"icon": "assets/images/codestream.svg",
					"contextualTitle": "CodeStream"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "CodeStream",
			"properties": {
				"codestream.autoSignIn": {
					"type": "boolean",
					"default": true,
					"description": "Specifies whether to automatically sign in to CodeStream",
					"scope": "window"
				},
				"codestream.disableStrictSSL": {
					"type": "boolean",
					"default": false,
					"description": "Allow self-signed certificates to be used in network requests",
					"scope": "window"
				},
				"codestream.extraCerts": {
					"type": "string",
					"default": null,
					"description": "Specify path to file containing any certificate(s) you wish CodeStream connections to trust",
					"scope": "window"
				},
				"codestream.email": {
					"type": "string",
					"default": null,
					"description": "Specifies the email address to use to connect to the CodeStream service",
					"scope": "window"
				},
				"codestream.proxySupport": {
					"type": "string",
					"default": "on",
					"enum": [
						"on",
						"off"
					],
					"description": "Specifies whether to support proxy servers",
					"scope": "window"
				},
				"codestream.serverUrl": {
					"type": "string",
					"default": "https://codestream-api-v2-us1.service.newrelic.com",
					"description": "Specifies the url to use to connect to the CodeStream service",
					"scope": "window"
				},
				"codestream.highlightEntityGuids": {
					"type": "boolean",
					"default": true,
					"description": "Specifies whether to highlight entity guids in the editor",
					"scope": "window"
				},
				"codestream.traceLevel": {
					"type": "string",
					"default": "verbose",
					"enum": [
						"silent",
						"errors",
						"verbose",
						"debug"
					],
					"description": "Specifies how much (if any) output will be sent to the CodeStream output channel",
					"scope": "window"
				},
				"codestream.goldenSignalsInEditor": {
					"type": "boolean",
					"default": true,
					"description": "Specifies whether to show code-level metrics in the editor",
					"scope": "window"
				},
				"codestream.goldenSignalsInEditorFormat": {
					"type": "string",
					"default": "avg duration: ${averageDuration} | error rate: ${errorRate} - ${sampleSize} samples in the last ${since}",
					"description": "Specifies how to format code-level metrics in the editor",
					"scope": "window"
				}
			}
		},
		"commands": [
			{
				"command": "codestream.debugProtocol",
				"title": "debugProtocol",
				"category": "CodeStream"
			},
			{
				"command": "codestream.signIn",
				"title": "Sign In...",
				"category": "CodeStream"
			},
			{
				"command": "codestream.signOut",
				"title": "Sign Out",
				"category": "CodeStream"
			},
			{
				"command": "codestream.toggle",
				"title": "Toggle CodeStream",
				"category": "CodeStream"
			},
			{
				"command": "codestream.viewMethodLevelTelemetry",
				"title": "View Method Level Telemetry"
			},
			{
				"command": "codestream.logSearch",
				"title": "Find in Logs"
			},
			{
				"command": "codestream.executeNrql",
				"title": "Execute Selected NRQL"
			}
		],
		"keybindings": [
			{
				"command": "codestream.toggle",
				"args": {
					"source": "Shortcut"
				},
				"key": "ctrl+shift+/ /",
				"mac": "ctrl+/ /",
				"when": "codestream:status == signedIn"
			},
			{
				"command": "codestream.toggle",
				"args": {
					"source": "Shortcut"
				},
				"key": "ctrl+shift+/ ctrl+shift+/",
				"mac": "ctrl+/ ctrl+/",
				"when": "codestream:status == signedIn"
			},
			{
				"command": "codestream.executeNrql",
				"args": {
					"source": "Shortcut"
				},
				"key": "ctrl+enter",
				"mac": "cmd+enter",
				"when": "codestream:status == signedIn && resourceExtname == .nrql"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "codestream.signIn",
					"when": "codestream:status != signedIn && codestream:status != signingIn"
				},
				{
					"command": "codestream.signOut",
					"when": "codestream:status == signedIn"
				},
				{
					"command": "codestream.toggle",
					"when": "codestream:status == signedIn"
				}
			],
			"editor/context": [
				{
					"command": "codestream.logSearch",
					"when": "codestream:status == signedIn && editorTextFocus",
					"group": "9_zcodestream@3"
				},
				{
					"command": "codestream.executeNrql",
					"when": "codestream:status == signedIn && editorTextFocus && resourceExtname == .nrql && editorHasSelection",
					"group": "9_zcodestream@4"
				}
			]
		},
		"resourceLabelFormatters": [
			{
				"scheme": "codestream-git",
				"authority": "*",
				"formatting": {
					"label": "${path} (${query.shortSha})",
					"separator": "/",
					"workspaceSuffix": "CodeStream",
					"stripPathStartingSeparator": true
				}
			}
		]
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"scripts": {
		"agent:build": "pushd \"../shared/agent\" && npm run build -- --ide vscode && popd",
		"agent:bundle:ci": "pushd \"../shared/agent\" && npm run bundle:ci && popd",
		"agent:bundle": "pushd \"../shared/agent\" && npm run bundle && popd",
		"agent:clean:ci": "pushd \"../shared/agent\" && npm run clean:ci && popd",
		"agent:rebuild": "pushd \"../shared/agent\" && npm run rebuild -- --ide vscode && popd",
		"agent:test:ci": "pushd \"../shared/agent\" && npm run test:ci && popd",
		"agent:test": "pushd \"../shared/agent\" && npm run test-unit && popd",
		"agent:watch": "pushd \"../shared/agent\" && npm run watch -- --ide vscode && popd",
		"build": "tsx esbuild.ts",
		"bundle:ci": "npm run clean:ci && npm run bundle",
		"bundle": "npm install --no-save && npm run verify:compile && npm run webview:verify && npm run agent:bundle && tsx esbuild.ts --prod",
		"cistart": "echo 'starting tests'",
		"cistop": "echo 'starting tests'",
		"citest": "npm run vscode:test:ci && npm run agent:test:ci && npm run webview:test:ci",
		"clean:ci": "git clean -xdf && npm run webview:clean:ci && npm run agent:clean:ci",
		"dev:vscode:test": "node ./out/src/__test__/runTest.js",
		"dev:vscode:watch-tests": "tsc -p tsconfig.test.json -w --outDir out",
		"lint": "eslint --fix --ext .ts \"src/{**!(webviews)/*,*}\"",
		"mwatch": "tmux new-session 'npm run watch' \\; split-window -h 'npm run agent:watch'",
		"pack": "vsce package",
		"postinstall": "patch-package",
		"preinstall": "pushd \"../shared/ui\" && npm install --no-save && popd && pushd \"../shared/util\" && npm install --no-save && popd && pushd \"../shared/build\" && npm install --no-save && popd && pushd \"../shared/agent\" && npm install --no-save && popd",
		"pretty": "prettier  --write \"./src/**/*.ts\" \"./src/**/*.js\" ./package.json ./.prettierrc.js",
		"rebuild": "npm install --no-save && npm run agent:rebuild && npm run build",
		"test": "npm run agent:test && npm run webview:test && npm run vscode:test",
		"vscode:compile-tests": "rimraf out .tsbuildinfo && tsc --outDir out && tsc-alias --dir out && regex-replace '\".*\\.\\./vscode\"' '\"vscode\"' ./out",
		"vscode:test": "npx jest --forceExit --runInBand --testPathPattern=\"__test__\\/unit\\/.*\\.spec\\.ts$\"",
		"vscode:test:ci": "npm run vscode:test",
		"vscode:test-OLD": "npm run vscode:compile-tests && node ./out/vscode/src/__test__/runTest.js",
		"verify:compile": "tsc --noEmit",
		"verify:lint": "npx eslint  src/** *.js *.ts",
		"verify:prettier": "prettier --check src/** docs/** *.ts *.js *.md package.json",
		"watch": "tsx esbuild.ts --watch",
		"webview:build": "tsx esbuild.ts --config-name sidebar",
		"webview:clean:ci": "pushd \"../shared/ui\" && npm run clean:ci && popd",
		"webview:test:ci": "pushd \"../shared/ui\" && npm run test:ci && popd",
		"webview:test": "pushd \"../shared/ui\" && npm run test && popd",
		"webview:verify": "pushd \"../shared/ui\" && npm run verify:compile && popd",
		"webview:watch": "tsx esbuild.ts --watch --config-name sidebar"
	},
	"dependencies": {
		"date-fns": "1.30.1",
		"eol": "0.9.1",
		"https-proxy-agent": "3.0.1",
		"lodash": "4.17.21",
		"node-abort-controller": "3.0.1",
		"node-fetch": "2.6.7",
		"source-map-support": "0.5.21",
		"timed-cache": "2.0.0",
		"uuid": "3.3.2",
		"vscode-languageclient": "5.2.1"
	},
	"devDependencies": {
		"@types/diff": "4.0.2",
		"@types/glob": "7.2.0",
		"@types/jest": "29.5.11",
		"@types/keytar": "4.4.2",
		"@types/lodash": "4.14.178",
		"@types/mocha": "9.1.0",
		"@types/node": "18",
		"@types/node-fetch": "2.6.1",
		"@types/sinon": "10.0.11",
		"@types/timed-cache": "2.0.2",
		"@types/uuid": "3.4.5",
		"@types/vscode": "1.73.1",
		"@typescript-eslint/eslint-plugin": "7.10.0",
		"@typescript-eslint/parser": "7.10.0",
		"@vscode/test-electron": "2.1.2",
		"babel-plugin-styled-components": "2.0.2",
		"esbuild": "0.21.3",
		"eslint": "8.57.0",
		"eslint-filtered-fix": "0.3.0",
		"eslint-import-resolver-typescript": "3.6.1",
		"eslint-plugin-import": "2.29.1",
		"eslint-plugin-unused-imports": "3.2.0",
		"glob": "7.2.0",
		"jest-teamcity": "1.11.0",
		"less": "4.1.3",
		"lint-staged": "13.2.3",
		"mocha": "9.2.1",
		"patch-package": "7.0.2",
		"prettier": "3.0.0",
		"regex-replace": "2.3.1",
		"rimraf": "3.0.2",
		"sinon": "14.0.0",
		"ts-jest": "29.1.3",
		"tsc-alias": "1.8.10",
		"tsx": "4.10.5",
		"typescript": "5.4.5",
		"vsce": "2.6.7"
	},
	"lint-staged": {
		"*": [
			"prettier --ignore-unknown --write",
			"eslint-filtered-fix --rule 'unused-imports/no-unused-imports' --rule 'unused-imports/no-unused-vars'"
		],
		"src/*.{js,jsx,ts,tsx}": "eslint"
	},
	"overrides": {
		"braces": "3.0.3"
	}
}
